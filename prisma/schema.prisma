// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId             String               @id @default(uuid())
  name               String
  email              String               @unique
  password           String
  isAdmin            Boolean              @default(false)
  isInGroup          Boolean              @default(false)
  linkdin            String?
  github             String?
  twitter            String?
  haveApplied        Boolean              @default(false)
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  courses            Courses[]
  course_enrollments Course_Enrollments[]
}

model Courses {
  courseId           String               @id @default(uuid())
  courseName         String
  title              String
  description        String
  price              Int
  isActive           Boolean              @default(true)
  createdBy          String
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  user               User                 @relation(fields: [createdBy], references: [userId], onDelete: Cascade)
  course_enrollments Course_Enrollments[]
}

model Course_Enrollments {
  enrollmentId    String   @id @default(uuid())
  enrolledUser    String
  purchaseAmmount Int?
  valid_till      DateTime
  isActive        Boolean  @default(true)
  course          String
  courseDetail    Courses  @relation(fields: [course], references: [courseId], onDelete: Cascade)
  user            User     @relation(fields: [enrolledUser], references: [userId], onDelete: Cascade)
}
